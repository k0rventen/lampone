apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: vaultwarden
  namespace: flux-system
spec:
  install:
    createNamespace: true
  interval: 10m
  chart:
    spec:
      chart: ./k8s/appchart
      version: "x.x.x"
      sourceRef:
        kind: GitRepository
        name: flux-system
        namespace: flux-system
      interval: 10m
  targetNamespace: services
  values:
    apps:
      - name: vaultwarden
        image: vaultwarden/server:1.33.2
        volumeMounts:
          - name: vaultwarden-data
            mountPath: /data
        volumes:
          - name: vaultwarden-data
            persistentVolumeClaim:
              claimName: vaultwarden-data
        service: 80
        pvc:
          - vaultwarden-data
---
# vaultwarden-eso

apiVersion: apps/v1
kind: Deployment
metadata:
  name: vaultwarden-eso
  namespace: services
  labels:
    app.kubernetes.io/name: vaultwarden-eso
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: vaultwarden-eso

  template:
    metadata:
      labels:
        app.kubernetes.io/name: vaultwarden-eso

    spec:
      imagePullSecrets:
        - name: registry-creds
      containers:
        - name: vaultwarden-eso
          image: gitea.cocointhe.cloud/coco/vaultwarden-eso
          envFrom:
            - secretRef:
                name: vaultwarden-eso-secret
          ports:
            - name: http
              containerPort: 8087
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - wget
                - -q
                - http://127.0.0.1:8087/sync?force=true
                - --post-data=''
            initialDelaySeconds: 20
            failureThreshold: 3
            timeoutSeconds: 10
            periodSeconds: 120
          readinessProbe:
            tcpSocket:
              port: 8087
            initialDelaySeconds: 20
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 8087
            initialDelaySeconds: 10
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: vaultwarden-eso
  namespace: services
  labels:
    app.kubernetes.io/name: vaultwarden-eso
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 8087
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: vaultwarden-eso

---
# kind: NetworkPolicy
# apiVersion: networking.k8s.io/v1
# metadata:
#   namespace: services
#   name: external-secret-2-bw-cli
# spec:
#   podSelector:
#     matchLabels:
#       app.kubernetes.io/name: vaultwarden-eso
#   ingress:
#     - from:
#         - podSelector:
#             matchLabels:
#               app.kubernetes.io/instance: external-secrets
#               app.kubernetes.io/name: external-secrets
---
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: vaultwarden-eso
spec:
  provider:
    webhook:
      url: "http://vaultwarden-eso.services.svc.cluster.local:8087/object/item/{{ .remoteRef.key }}"
      headers:
        Content-Type: application/json
      result:
        jsonPath: "$.data.login.{{ .remoteRef.property }}"
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: my-secret
  namespace: services
spec:
  target:
    name: my-secret
    template:
      type: Opaque
      data:
        test: "{{ .password }}"

  data:
    - secretKey: password
      sourceRef:
        storeRef:
          name: vaultwarden-eso
          kind: ClusterSecretStore # or SecretStore
      remoteRef:
        key: 0160f1f1-6e81-4b33-b9fe-526b08f13afa
        property: password
